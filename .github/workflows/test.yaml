name: Test

on: [pull_request]

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download and install dependencies
        uses: ./.github/actions/setup
      - name: Run tests
        run: bun run test:coverage

  stateless-parallel:
    name: stateless parallel (${{matrix.shard}})
    timeout-minutes: 10
    runs-on:
      group: default-larger-runners
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v3
      - name: Download and install dependencies
        uses: ./.github/actions/setup
        with:
          playwright: true
      - name: Run tests
        run: 'parallel --lb --halt now,done=1 ::: \
          "bun run build:glocal && bun run export && bun run wrangle" \
          "bun run e2e:ci -nb"'
        env:
          PLAYWRIGHT_SHARD: ${{ matrix.shard }}
          PLAYWRIGHT_TOTAL: ${{ strategy.job-total }}
          PLAYWRIGHT_PROJECT: stateless-parallel
      - name: Upload report shard
        uses: ./.github/actions/upload-report-shard
        if: always()

  build-stateless:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Download and install dependencies
        uses: ./.github/actions/setup
      - name: Build stateless and export
        run: bun run build:glocal && bun run export
      - name: Tar stateless files
        run: tar -cvf stateless-build.tar out
      - name: Upload stateless
        uses: actions/upload-artifact@v4
        with:
          name: stateless-build
          path: stateless-build.tar

  build-stateful:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Download and install dependencies
        uses: ./.github/actions/setup
      - name: Build stateful and export
        run: bun run build && bun run export
      - name: Tar stateful files
        run: tar -cvf stateful-build.tar out
      - name: Upload stateful
        uses: actions/upload-artifact@v4
        with:
          name: stateful-build
          path: stateful-build.tar

  stateless-serial:
    name: stateless serial (${{matrix.shard}})
    needs: build-stateless
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v3
      - name: Download and install dependencies
        uses: ./.github/actions/setup
        with:
          playwright: true
          build-download: stateless-build
      - name: Run tests
        run: bun run e2e:ci -nb
        env:
          PLAYWRIGHT_SHARD: ${{ matrix.shard }}
          PLAYWRIGHT_TOTAL: ${{ strategy.job-total }}
          PLAYWRIGHT_PROJECT: stateless-serial
      - name: Upload report shard
        uses: ./.github/actions/upload-report-shard
        if: always()

  stateful:
    name: stateful (${{matrix.shard}})
    needs: build-stateful
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@v3
      - name: Download and install dependencies
        uses: ./.github/actions/setup
        with:
          playwright: true
          build-download: stateful-build
      - name: Run tests
        run: |
          parallel --lb --halt now,done=1 ::: \
          "bun run wrangle" \
          "bun run wait-on http://127.0.0.1:8788 && bunx playwright test --shard=${{matrix.shard}}/${{strategy.job-total}} --project=stateful"
        env:
          SECRET_WORDS: ${{ secrets.SECRET_WORDS }}
      - name: Upload report shard
        uses: ./.github/actions/upload-report-shard
        if: always()

  merge-reports:
    name: Merge playwright reports
    if: always()
    needs: [stateless-parallel, stateless-serial, stateful]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Download blob reports
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true
      - name: log 1
        run: ls ./all-blob-reports
      - name: Merge into single report
        run: bunx playwright merge-reports -c merge.config.ts ./all-blob-reports
      - name: log 2
        run: ls ./all-blob-reports
      - name: log 3
        run: ls ./
      - uses: daun/playwright-report-summary@v3
        with:
          report-file: results.json
